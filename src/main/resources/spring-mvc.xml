<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context.xsd  
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-autowire="byName">

       <!-- 开启注解模式，扫描com.jk.controller包下的所有子包中的所有类，
       凡是包含@Controller注解的类都会生成控制层实例 -->
       <context:component-scan base-package="com.jy.controller"></context:component-scan>

       <!-- <mvc:annotation-driven/> -->
       
       <!-- 注解驱动 -->
       <mvc:annotation-driven>
           <!-- 指定http返回编码格式，不然返回ajax请求json会出现中文乱码 -->
           <mvc:message-converters>
               <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                   <property name="supportedMediaTypes">
                       <list>
                           <value>text/html;charset=UTF-8</value>
                           <value>application/json;charset=UTF-8</value>
                           <value>*/*;charset=UTF-8</value>
                       </list>
                   </property>
               </bean>
           </mvc:message-converters>
       </mvc:annotation-driven>
       
       

		<!--
	        jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
		        如/view/welcome.jsp对应的视图名就是：welcome
		        这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
	    -->
	    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    	<!-- 返回值的前缀 -->
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <!-- 返回值的后缀 -->
	        <property name="suffix" value=".jsp"/>
	        <property name="order" value="2"/>
	    </bean>
	    
	    <!-- freemarker视图解析器 -->
       <bean id="FreeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
              <property name="templateLoaderPath" value="/WEB-INF/templates/"/>
              <property name="defaultEncoding" value="UTF-8"/>
       </bean>
       <bean id="FreeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
            <property name="suffix" value=".ftl"/>
            <property name="contentType" value="text/html;charset=UTF-8"/>
            <property name="requestContextAttribute" value="request" />
            <property name="order" value="1"/>
            <property name="cache" value="false" />
       </bean>
	    
	    
    <!--文件上传解析-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--文件的最大上传大小:单位（byte：字节）-->
        <property name="maxUploadSize" value="20480000"/>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>
    
    <!-- 配置静态文件过滤 -->
    <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"></mvc:mapping>
            <mvc:exclude-mapping path="/login"></mvc:exclude-mapping>
            <mvc:exclude-mapping path="/toLogin"></mvc:exclude-mapping>
            <mvc:exclude-mapping path="/js/**"></mvc:exclude-mapping>
            <bean class="com.jy.common.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>